# vim: ft=ruby
require 'optparse'
filename = File.join(File.dirname(File.expand_path(__FILE__)), ENV['envopt'] || "default.env")

opt = Marshal.load(IO.binread(filename)) rescue {
  :root => ENV['path'].split(";") + ["C:/*", "C:/*/*", "C:/Progra~1/*", "C:/Progra~1/*/*", "C:/Progra~1/*/*/*", "C:/Progra~2/*", "C:/windows/Microsoft.NET/**", "C:/Progra~2/*/*", "C:/Progra~2/*/*/*", "D:/*", "D:/*/*"],
  :ext  => ENV['pathext'].split(";")
}

tempopt = {}
OptionParser.new do |opts|
  opts.banner = "Usage: #{__FILE__} [options] file arguments"
  opts.on("-r", "--root") do |v|
    tempopt[:norun] = true
    if v == "clear"
      opt[:root].clear
    else
      opt[:root] << v
    end
  end

  opts.on("-e", "--ext") do |v|
    tempopt[:norun] = true
    if v == "clear"
      opt[:ext].clear
    else
      opt[:ext] << v
    end
  end
end


Marshal.dump(opt, open(filename, 'wb')).close

unless tempopt[:norun]
	file = ARGV.shift
	args = ARGV[0..-1]
	realfile = catch(:file) do
	  opt[:root].each{|x|
	    a = File.join(x, file)
	    Dir.glob(a.tr("\\", "/")).each{|i|
	       throw :file, i if FileTest.file?(i) 
	    }
	    opt[:ext].each{|ex|
		b = a + ex
		Dir.glob(b.tr("\\", "/")).each{|i|
	        throw :file, i if FileTest.file?(i) 
		}
    	}
	  }
	  nil
	end
end

if realfile
  runargs = ([realfile] + args).map{|x| '"' + x.gsub(/"/, "\\\"") + '"'}
  STDERR.puts runargs.join(" ")
  system runargs.join(" ")				    
end
